scalar Time

type User {
    id: ID!
    createdAt: Time
    names: String!
    lastnames: String!
    activate: Boolean!
    email: String!
    birthday: Time
}

input UserInput {
    birthday: Time
    names: String!
    lastnames: String!
    activate: Boolean
    email: String!
}

enum TypeProperty {
    HOUSE,
    APARTMENT,
    PREMISES,
    OFFICE,
    VEHICLE
}

type Property {
    class: TypeProperty!
    deleted: Boolean!
    owner: User!
    address: String!
    description: String!
    city: String!
}

input PropertyInput {
    class: TypeProperty! = APARTMENT
    owner: ID!
    address: String!
    description: String!
    city: String!
}

type Mutation {
    createUser(user: UserInput!): User!
    createProperty(property: PropertyInput!): Property
}

type Query {
    users: [User!]
}